package user.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import common.pojo.User;

public class UserDAOImpl implements UserDAO {

	private Connection conn = null;
	private PreparedStatement pst = null;

	// 定义构造方法，实例化的时候完成连接的注入
	public UserDAOImpl(Connection conn) {
		super();
		this.conn = conn;
	}

	// 查询记录
	public ArrayList<User> select(User user) throws SQLException {
		// 获取User表中全部数据，并以字段page升序排序
		String sql = "select * from User where 1=1";
		String condition = user.getCondition();
		String limit = user.getLimit();
		if (condition != null && !condition.equals("")) {
//			相当于模糊匹配，查找每个中的关键字
			String cond1 = "username like '%" + condition + "%'";
			String cond2 = "name like '%" + condition + "%'";
			String cond3 = "page = '" + condition + "'";
			sql = "select * from User where " + cond1 + " or " + cond2 + " or " + cond3;
		}
		if (limit != null && !limit.equals("")) {
			sql += limit;
		}
		pst = conn.prepareStatement(sql);
		ResultSet rs = pst.executeQuery();
		ArrayList<User> userList = new ArrayList<User>();
		if (rs.next()) {
			for (int i = 0; i <= rs.getRow(); i++) {
				User newUser = new User();
				newUser.setAddress(rs.getString("address"));
				newUser.setAge(rs.getInt("age"));
				newUser.setName(rs.getString("name"));
				newUser.setPassword(rs.getString("password"));
				newUser.setUserName(rs.getString("userName"));
				newUser.setUserImg(rs.getString("userImg"));
				newUser.setPhone(rs.getString("phone"));
				newUser.setSex(rs.getString("sex"));
				userList.add(newUser);
				rs.next();
			}
		}
		return userList;
	}

	// 插入记录
	public boolean insert(User user) throws SQLException {
		try {
			String sql = "insert into User(id,adtitle,adleft,adright,page,imgurl) values(?,?,?,?,?,?) ";
			pst = conn.prepareStatement(sql);
			pst.setInt(1, user.getId());
			pst.setString(2, user.getAdTitle());
			pst.setString(3, user.getAdLeft());
			pst.setString(4, user.getAdRight());
			pst.setInt(5, user.getPage());
			pst.setString(6, user.getImgUrl());
			pst.executeUpdate();
			return true;
		} catch (Exception e) {
			return false;
		}
	}

	// 更新记录
	public boolean update(User user) throws SQLException {
		try {
			String sql = "update User set adtitle=?,adleft=?,adright=?,page=?,imgurl=? where id=?";
			pst = conn.prepareStatement(sql);
			pst.setString(1, user.getAdTitle());
			pst.setString(2, user.getAdLeft());
			pst.setString(3, user.getAdRight());
			pst.setInt(4, user.getPage());
			pst.setString(5, user.getImgUrl());
			pst.setInt(6, user.getId());
			pst.executeUpdate();
			return true;
		} catch (Exception e) {
			return false;
		}
	}

	// 删除记录
	public boolean delete(User user) throws SQLException {
		try {
			String sql = "delete from User where id=?";
			pst = conn.prepareStatement(sql);
			pst.setInt(1, user.getId());
			pst.executeUpdate();
			return true;
		} catch (Exception e) {
			return false;
		}
	}

	public User findOrderInfoById(String id) throws SQLException {
		String sql = "select * from User where id=?";
		pst = conn.prepareStatement(sql);
		pst.setString(1, id);
		ResultSet rs = pst.executeQuery();
		rs.next();
		User User = new User();
		User.setId(rs.getInt("id"));
		User.setAdTitle(rs.getString("adtitle"));
		User.setAdLeft(rs.getString("adleft"));
		User.setAdRight(rs.getString("adright"));
		User.setPage(rs.getInt("page"));
		User.setImgUrl(rs.getString("imgurl"));
		return User;
	}
}
